{"remainingRequest":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\pages\\Dashboard\\Forms\\ValidationForms\\RegisterForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\pages\\Dashboard\\Forms\\ValidationForms\\RegisterForm.vue","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\.babelrc","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { SlideYDownTransition } from 'vue2-transitions';\nexport default {\n  components: {\n    SlideYDownTransition: SlideYDownTransition\n  },\n  data: function data() {\n    return {\n      boolean: null,\n      email: '',\n      password: '',\n      confirmPassword: '',\n      touched: {\n        email: false,\n        password: false,\n        confirmPass: false\n      },\n      modelValidations: {\n        email: {\n          required: true,\n          email: true\n        },\n        password: {\n          required: true,\n          min: 5\n        },\n        confirmPassword: {\n          required: true,\n          confirmed: 'password'\n        }\n      }\n    };\n  },\n  methods: {\n    validate: function validate() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (isValid) {\n        _this.$emit('on-submit', _this.registerForm, isValid);\n      });\n    }\n  },\n  watch: {\n    email: function email() {\n      this.touched.email = true;\n    },\n    password: function password() {\n      this.touched.password = true;\n    },\n    confirmPassword: function confirmPassword() {\n      this.touched.confirmPass = true;\n    }\n  }\n};",{"version":3,"sources":["RegisterForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA,SAAA,oBAAA,QAAA,kBAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,oBAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,eAAA,EAAA,EAJA;AAKA,MAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,QAAA,EAAA,KAFA;AAGA,QAAA,WAAA,EAAA;AAHA,OALA;AAUA,MAAA,gBAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA;AAFA,SADA;AAKA,QAAA,QAAA,EAAA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,GAAA,EAAA;AAFA,SALA;AASA,QAAA,eAAA,EAAA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,SAAA,EAAA;AAFA;AATA;AAVA,KAAA;AAyBA,GA9BA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,WAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,WAAA,EAAA,KAAA,CAAA,YAAA,EAAA,OAAA;AACA,OAFA;AAGA;AALA,GA/BA;AAsCA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,WAAA,OAAA,CAAA,KAAA,GAAA,IAAA;AACA,KAHA;AAIA,IAAA,QAJA,sBAIA;AACA,WAAA,OAAA,CAAA,QAAA,GAAA,IAAA;AACA,KANA;AAOA,IAAA,eAPA,6BAOA;AACA,WAAA,OAAA,CAAA,WAAA,GAAA,IAAA;AACA;AATA;AAtCA,CAAA","sourcesContent":["<template>\n  <form>\n    <md-card>\n      <md-card-header class=\"md-card-header-icon md-card-header-green\">\n        <div class=\"card-icon\">\n          <md-icon>mail_outline</md-icon>\n        </div>\n        <h4 class=\"title\">Register Form</h4>\n      </md-card-header>\n\n      <md-card-content>\n        <md-field :class=\"[\n          {'md-valid': !errors.has('email') && touched.email},\n          {'md-error': errors.has('email')}]\">\n          <label>Email Adress</label>\n          <md-input\n            v-model=\"email\"\n            data-vv-name=\"email\"\n            type=\"email\"\n            name=\"email\"\n            required\n            v-validate=\"modelValidations.email\">\n          </md-input>\n          <slide-y-down-transition>\n            <md-icon class=\"error\" v-show=\"errors.has('email') && touched.email\">close</md-icon>\n          </slide-y-down-transition>\n          <slide-y-down-transition>\n            <md-icon class=\"success\" v-show=\"!errors.has('email') && touched.email\">done</md-icon>\n          </slide-y-down-transition>\n        </md-field>\n        <md-field :class=\"[\n          {'md-valid': !errors.has('password') && touched.password},\n          {'md-error': errors.has('password')}]\">\n          <label>Password</label>\n          <md-input\n            v-model=\"password\"\n            data-vv-name=\"password\"\n            type=\"password\"\n            name=\"password\"\n            required\n            v-validate=\"modelValidations.password\">\n          </md-input>\n          <slide-y-down-transition>\n            <md-icon class=\"error\" v-show=\"errors.has('password') && touched.password\">close</md-icon>\n          </slide-y-down-transition>\n          <slide-y-down-transition>\n            <md-icon class=\"success\" v-show=\"!errors.has('password') && touched.password\">done</md-icon>\n          </slide-y-down-transition>\n        </md-field>\n        <md-field :class=\"[\n          {'md-valid': !errors.has('confirmPassword') && touched.confirmPass},\n          {'md-error': errors.has('confirmPassword')}]\">\n          <label>Confirm Password</label>\n          <md-input\n            v-model=\"confirmPassword\"\n            data-vv-name=\"confirmPassword\"\n            type=\"password\"\n            name=\"confirmPassword\"\n            required\n            v-validate=\"modelValidations.confirmPassword\">\n          </md-input>\n          <slide-y-down-transition>\n            <md-icon class=\"error\" v-show=\"errors.has('confirmPassword') && touched.confirmPassword\">close</md-icon>\n          </slide-y-down-transition>\n          <slide-y-down-transition>\n            <md-icon class=\"success\" v-show=\"!errors.has('confirmPassword') && touched.confirmPassword\">done</md-icon>\n          </slide-y-down-transition>\n        </md-field>\n        <div class=\"form-category\">* Required fields</div>\n      </md-card-content>\n\n      <md-card-actions md-alignment=\"space-between\">\n        <md-checkbox v-model=\"boolean\">Subscribe to newsletter</md-checkbox>\n        <md-button native-type=\"submit\" @click.native.prevent=\"validate\" class=\"md-success\">Register</md-button>\n      </md-card-actions>\n    </md-card>\n  </form>\n</template>\n<script>\nimport { SlideYDownTransition } from 'vue2-transitions'\nexport default {\n  components: {\n    SlideYDownTransition\n  },\n  data() {\n    return {\n      boolean: null,\n      email: '',\n      password: '',\n      confirmPassword: '',\n      touched: {\n        email: false,\n        password: false,\n        confirmPass: false\n      },\n      modelValidations: {\n        email: {\n          required: true,\n          email: true\n        },\n        password: {\n          required: true,\n          min: 5\n        },\n        confirmPassword: {\n          required: true,\n          confirmed: 'password'\n        }\n      }\n    }\n  },\n  methods: {\n    validate() {\n      this.$validator.validateAll().then(isValid => {\n        this.$emit('on-submit', this.registerForm, isValid)\n      })\n    }\n  },\n  watch: {\n    email(){\n      this.touched.email = true\n    },\n    password(){\n      this.touched.password = true\n    },\n    confirmPassword(){\n      this.touched.confirmPass = true\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.md-card .md-card-actions{\n  border: none;\n}\n</style>\n"],"sourceRoot":"src\\pages\\Dashboard\\Forms\\ValidationForms"}]}