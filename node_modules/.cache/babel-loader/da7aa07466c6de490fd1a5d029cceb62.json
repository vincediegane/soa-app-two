{"remainingRequest":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Vincent\\Desktop\\soa-app-two\\src\\components\\Collapse.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\src\\components\\Collapse.vue","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\.babelrc","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { CollapseTransition } from 'vue2-transitions';\nexport default {\n  name: 'collapse',\n  components: {\n    CollapseTransition: CollapseTransition\n  },\n  props: {\n    collapse: Array,\n    icon: String,\n    colorCollapse: String\n  },\n  data: function data() {\n    return {\n      isActive: 1\n    };\n  },\n  methods: {\n    getActiveCollapse: function getActiveCollapse(index) {\n      return this.isActive == index;\n    },\n    activeCollapse: function activeCollapse(index) {\n      return {\n        'is-active': this.isActive == index\n      };\n    },\n    toggle: function toggle(index) {\n      if (index == this.isActive) {\n        this.isActive = 0;\n      } else {\n        this.isActive = index;\n      }\n    },\n    getCollapseContent: function getCollapseContent(index) {\n      return 'md-collapse-pane-' + index + '';\n    },\n    getColorCollapse: function getColorCollapse(colorCollapse) {\n      return 'md-' + colorCollapse + '';\n    }\n  }\n};",{"version":3,"sources":["Collapse.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAA,kBAAA,QAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,KADA;AAEA,IAAA,IAAA,EAAA,MAFA;AAGA,IAAA,aAAA,EAAA;AAHA,GALA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,KADA,EACA;AACA,aAAA,KAAA,QAAA,IAAA,KAAA;AACA,KAHA;AAIA,IAAA,cAJA,0BAIA,KAJA,EAIA;AACA,aAAA;AACA,qBAAA,KAAA,QAAA,IAAA;AADA,OAAA;AAGA,KARA;AASA,IAAA,MATA,kBASA,KATA,EASA;AACA,UAAA,KAAA,IAAA,KAAA,QAAA,EAAA;AACA,aAAA,QAAA,GAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,QAAA,GAAA,KAAA;AACA;AACA,KAfA;AAgBA,IAAA,kBAAA,EAAA,4BAAA,KAAA,EAAA;AACA,aAAA,sBAAA,KAAA,GAAA,EAAA;AACA,KAlBA;AAmBA,IAAA,gBAAA,EAAA,0BAAA,aAAA,EAAA;AACA,aAAA,QAAA,aAAA,GAAA,EAAA;AACA;AArBA;AAfA,CAAA","sourcesContent":["<template>\n  <div>\n    <div :class=\"[\n      'md-collapse',\n      activeCollapse(index + 1),\n      {[getColorCollapse(colorCollapse)]: true}]\"\n      v-for=\"(item, index) in collapse\" :key=\"item\">\n      <div class=\"md-collapse-label\" @click=\"toggle(index + 1)\">\n        <h5 class=\"md-collapse-title\">\n            {{item}}\n            <md-icon>{{icon}}</md-icon>\n        </h5>\n      </div>\n\n      <collapse-transition>\n      <div class=\"md-collapse-content\" v-show=\"getActiveCollapse(index + 1)\">\n        <slot :name=\"getCollapseContent(index + 1)\"></slot>\n      </div>\n      </collapse-transition>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { CollapseTransition } from 'vue2-transitions'\n\nexport default {\n  name: 'collapse',\n  components: {\n    CollapseTransition\n  },\n  props: {\n    collapse: Array,\n    icon: String,\n    colorCollapse: String\n  },\n  data(){\n    return {\n      isActive: 1\n    }\n  },\n  methods: {\n    getActiveCollapse(index){\n      return this.isActive == index\n    },\n    activeCollapse (index){\n      return {\n        'is-active': this.isActive == index\n      }\n    },\n    toggle (index) {\n      if(index == this.isActive) {\n        this.isActive = 0;\n      } else {\n        this.isActive = index;\n      }\n    },\n    getCollapseContent: function(index){\n      return 'md-collapse-pane-'+ index +''\n    },\n    getColorCollapse: function(colorCollapse){\n      return 'md-'+ colorCollapse +''\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.text-center{\n  display: flex;\n}\n</style>\n"],"sourceRoot":"src\\components"}]}