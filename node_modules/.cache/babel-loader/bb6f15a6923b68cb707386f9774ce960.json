{"remainingRequest":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\pages\\Dashboard\\Tables\\PaginatedTables.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\pages\\Dashboard\\Tables\\PaginatedTables.vue","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\.babelrc","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.sort\";\nimport _defineProperty from \"C:\\\\Users\\\\Vincent\\\\Desktop\\\\PROJECTS\\\\VueJs\\\\soa-app-two\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\n\nvar _components;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Table, TableColumn, Select, Option } from 'element-ui';\nimport { Pagination } from '@/components';\nimport users from './users';\nimport Fuse from 'fuse.js';\nimport swal from 'sweetalert2';\nexport default {\n  components: (_components = {\n    Pagination: Pagination\n  }, _defineProperty(_components, Select.name, Select), _defineProperty(_components, Option.name, Option), _defineProperty(_components, Table.name, Table), _defineProperty(_components, TableColumn.name, TableColumn), _components),\n  computed: {\n    /***\n     * Returns a page from the searched data or the whole data. Search is performed in the watch section below\n     */\n    queriedData: function queriedData() {\n      var result = this.tableData;\n\n      if (this.searchedData.length > 0) {\n        result = this.searchedData;\n      }\n\n      return result.slice(this.from, this.to);\n    },\n    to: function to() {\n      var highBound = this.from + this.pagination.perPage;\n\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n\n      return highBound;\n    },\n    from: function from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total: function total() {\n      return this.searchedData.length > 0 ? this.searchedData.length : this.tableData.length;\n    }\n  },\n  data: function data() {\n    return {\n      currentSort: 'name',\n      currentSortOrder: 'asc',\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      footerTable: ['Name', 'Email', 'Age', 'Salary', 'Actions'],\n      searchQuery: '',\n      propsToSearch: ['name', 'email', 'age'],\n      tableData: users,\n      searchedData: [],\n      fuseSearch: null\n    };\n  },\n  methods: {\n    customSort: function customSort(value) {\n      var _this = this;\n\n      return value.sort(function (a, b) {\n        var sortBy = _this.currentSort;\n\n        if (_this.currentSortOrder === 'desc') {\n          return a[sortBy].localeCompare(b[sortBy]);\n        }\n\n        return b[sortBy].localeCompare(a[sortBy]);\n      });\n    },\n    handleLike: function handleLike(item) {\n      swal({\n        title: \"You liked \".concat(item.name),\n        buttonsStyling: false,\n        type: 'success',\n        confirmButtonClass: 'md-button md-success'\n      });\n    },\n    handleEdit: function handleEdit(item) {\n      swal({\n        title: \"You want to edit \".concat(item.name),\n        buttonsStyling: false,\n        confirmButtonClass: 'md-button md-info'\n      });\n    },\n    handleDelete: function handleDelete(item) {\n      var _this2 = this;\n\n      swal({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonClass: 'md-button md-success btn-fill',\n        cancelButtonClass: 'md-button md-danger btn-fill',\n        confirmButtonText: 'Yes, delete it!',\n        buttonsStyling: false\n      }).then(function (result) {\n        if (result.value) {\n          _this2.deleteRow(item);\n\n          swal({\n            title: 'Deleted!',\n            text: \"You deleted \".concat(item.name),\n            type: 'success',\n            confirmButtonClass: 'md-button md-success btn-fill',\n            buttonsStyling: false\n          });\n        }\n      });\n    },\n    deleteRow: function deleteRow(item) {\n      var indexToDelete = this.tableData.findIndex(function (tableRow) {\n        return tableRow.id === item.id;\n      });\n\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    }\n  },\n  mounted: function mounted() {\n    // Fuse search initialization.\n    this.fuseSearch = new Fuse(this.tableData, {\n      keys: ['name', 'email'],\n      threshold: 0.3\n    });\n  },\n  watch: {\n    /**\n     * Searches through the table data by a given query.\n     * NOTE: If you have a lot of data, it's recommended to do the search on the Server Side and only display the results here.\n     * @param value of the query\n     */\n    searchQuery: function searchQuery(value) {\n      var result = this.tableData;\n\n      if (value !== '') {\n        result = this.fuseSearch.search(this.searchQuery);\n      }\n\n      this.searchedData = result;\n    }\n  }\n};",{"version":3,"sources":["PaginatedTables.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"md-layout\">\n    <div class=\"md-layout-item\">\n      <md-card>\n        <md-card-header class=\"md-card-header-icon md-card-header-green\">\n          <div class=\"card-icon\">\n            <md-icon>assignment</md-icon>\n          </div>\n          <h4 class=\"title\">Paginated Tables</h4>\n        </md-card-header>\n        <md-card-content>\n          <md-table :value=\"queriedData\" :md-sort.sync=\"currentSort\" :md-sort-order.sync=\"currentSortOrder\" :md-sort-fn=\"customSort\" class=\"paginated-table table-striped table-hover\">\n            <md-table-toolbar>\n              <md-field>\n                <label for=\"pages\">Per page</label>\n                <md-select v-model=\"pagination.perPage\" name=\"pages\">\n                  <md-option\n                    v-for=\"item in pagination.perPageOptions\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                    {{ item }}\n                  </md-option>\n                </md-select>\n              </md-field>\n\n              <md-field>\n                <md-input\n                  type=\"search\"\n                  class=\"mb-3\"\n                  clearable\n                  style=\"width: 200px\"\n                  placeholder=\"Search records\"\n                  v-model=\"searchQuery\">\n                </md-input>\n              </md-field>\n            </md-table-toolbar>\n\n            <md-table-row slot=\"md-table-row\" slot-scope=\"{ item }\">\n              <md-table-cell md-label=\"Name\" md-sort-by=\"name\">{{ item.name }}</md-table-cell>\n              <md-table-cell md-label=\"Email\" md-sort-by=\"email\">{{ item.email }}</md-table-cell>\n              <md-table-cell md-label=\"Age\">{{ item.age }}</md-table-cell>\n              <md-table-cell md-label=\"Salary\" >{{ item.salary }}</md-table-cell>\n              <md-table-cell md-label=\"Actions\">\n                <md-button\n                  class=\"md-just-icon md-info md-simple\"\n                  @click.native=\"handleLike(item)\">\n                  <md-icon>favorite</md-icon>\n                </md-button>\n                <md-button\n                  class=\"md-just-icon md-warning md-simple\"\n                  @click.native=\"handleEdit(item)\">\n                  <md-icon>dvr</md-icon>\n                </md-button>\n                <md-button\n                  class=\"md-just-icon md-danger md-simple\"\n                  @click.native=\"handleDelete(item)\">\n                  <md-icon>close</md-icon>\n                </md-button>\n              </md-table-cell>\n            </md-table-row>\n          </md-table>\n          <div class=\"footer-table md-table\">\n            <table>\n              <tfoot>\n                <tr>\n                  <th v-for=\"item in footerTable\" :key=\"item.name\" class=\"md-table-head\">\n                    <div class=\"md-table-head-container md-ripple md-disabled\">\n                      <div class=\"md-table-head-label\">\n                        {{item}}\n                      </div>\n                    </div>\n                  </th>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n        </md-card-content>\n        <md-card-actions md-alignment=\"space-between\">\n          <div class=\"\">\n            <p class=\"card-category\">Showing {{from + 1}} to {{to}} of {{total}} entries</p>\n          </div>\n          <pagination class=\"pagination-no-border pagination-success\"\n                        v-model=\"pagination.currentPage\"\n                        :per-page=\"pagination.perPage\"\n                        :total=\"total\">\n          </pagination>\n        </md-card-actions>\n      </md-card>\n    </div>\n  </div>\n\n</template>\n\n<script>\n  import {Table, TableColumn, Select, Option} from 'element-ui'\n  import {Pagination} from '@/components'\n  import users from './users'\n  import Fuse from 'fuse.js'\n  import swal from 'sweetalert2'\n\n  export default {\n    components: {\n      Pagination,\n      [Select.name]: Select,\n      [Option.name]: Option,\n      [Table.name]: Table,\n      [TableColumn.name]: TableColumn\n    },\n    computed: {\n      /***\n       * Returns a page from the searched data or the whole data. Search is performed in the watch section below\n       */\n       queriedData () {\n         let result = this.tableData;\n         if(this.searchedData.length > 0){\n           result = this.searchedData;\n         }\n         return result.slice(this.from, this.to)\n       },\n      to () {\n        let highBound = this.from + this.pagination.perPage\n        if (this.total < highBound) {\n          highBound = this.total\n        }\n        return highBound\n      },\n      from () {\n        return this.pagination.perPage * (this.pagination.currentPage - 1)\n      },\n      total () {\n        return this.searchedData.length > 0 ? this.searchedData.length : this.tableData.length;\n      }\n    },\n    data () {\n      return {\n        currentSort: 'name',\n     currentSortOrder: 'asc',\n        pagination: {\n          perPage: 5,\n          currentPage: 1,\n          perPageOptions: [5, 10, 25, 50],\n          total: 0\n        },\n        footerTable: ['Name', 'Email', 'Age', 'Salary', 'Actions'],\n        searchQuery: '',\n        propsToSearch: ['name', 'email', 'age'],\n        tableData: users,\n        searchedData: [],\n        fuseSearch: null\n      }\n    },\n    methods: {\n      customSort (value) {\n        return value.sort((a, b) => {\n          const sortBy = this.currentSort\n          if (this.currentSortOrder === 'desc') {\n            return a[sortBy].localeCompare(b[sortBy])\n          }\n          return b[sortBy].localeCompare(a[sortBy])\n        })\n      },\n      handleLike (item) {\n        swal({\n          title: `You liked ${item.name}`,\n          buttonsStyling: false,\n          type: 'success',\n          confirmButtonClass: 'md-button md-success'\n        })\n      },\n      handleEdit (item) {\n        swal({\n          title: `You want to edit ${item.name}`,\n          buttonsStyling: false,\n          confirmButtonClass: 'md-button md-info'\n        });\n      },\n      handleDelete (item) {\n        swal({\n          title: 'Are you sure?',\n          text: `You won't be able to revert this!`,\n          type: 'warning',\n          showCancelButton: true,\n          confirmButtonClass: 'md-button md-success btn-fill',\n          cancelButtonClass: 'md-button md-danger btn-fill',\n          confirmButtonText: 'Yes, delete it!',\n          buttonsStyling: false\n        }).then((result) => {\n          if(result.value){\n            this.deleteRow(item);\n            swal({\n              title: 'Deleted!',\n              text: `You deleted ${item.name}`,\n              type: 'success',\n              confirmButtonClass: 'md-button md-success btn-fill',\n              buttonsStyling: false\n            })\n          }\n        });\n      },\n      deleteRow(item){\n        let indexToDelete = this.tableData.findIndex((tableRow) => tableRow.id === item.id);\n        if (indexToDelete >= 0) {\n          this.tableData.splice(indexToDelete, 1)\n        }\n      }\n    },\n    mounted () {\n      // Fuse search initialization.\n      this.fuseSearch = new Fuse(this.tableData, {keys: ['name', 'email'], threshold: 0.3})\n    },\n    watch: {\n      /**\n       * Searches through the table data by a given query.\n       * NOTE: If you have a lot of data, it's recommended to do the search on the Server Side and only display the results here.\n       * @param value of the query\n       */\n      searchQuery(value){\n        let result = this.tableData;\n        if (value !== '') {\n          result = this.fuseSearch.search(this.searchQuery)\n        }\n        this.searchedData = result;\n      }\n    }\n  }\n</script>\n\n<style lang=\"css\" scoped>\n.md-card .md-card-actions{\n  border: 0;\n  margin-left: 20px;\n  margin-right: 20px;\n}\n</style>\n"],"sourceRoot":"src\\pages\\Dashboard\\Tables"}]}