{"remainingRequest":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Vincent\\Desktop\\soa-app-two\\src\\components\\NotificationPlugin\\index.js","dependencies":[{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\src\\components\\NotificationPlugin\\index.js","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\.babelrc","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find-index\";\nimport Notifications from './Notifications.vue';\nvar NotificationStore = {\n  state: [],\n  // here the notifications will be added\n  removeNotification: function removeNotification(timestamp) {\n    var indexToDelete = this.state.findIndex(function (n) {\n      return n.timestamp === timestamp;\n    });\n\n    if (indexToDelete !== -1) {\n      this.state.splice(indexToDelete, 1);\n    }\n  },\n  addNotification: function addNotification(notification) {\n    notification.timestamp = new Date();\n    notification.timestamp.setMilliseconds(notification.timestamp.getMilliseconds() + this.state.length);\n    this.state.push(notification);\n  },\n  notify: function notify(notification) {\n    var _this = this;\n\n    if (Array.isArray(notification)) {\n      notification.forEach(function (notificationInstance) {\n        _this.addNotification(notificationInstance);\n      });\n    } else {\n      this.addNotification(notification);\n    }\n  }\n};\nvar NotificationsPlugin = {\n  install: function install(Vue) {\n    Vue.mixin({\n      data: function data() {\n        return {\n          notificationStore: NotificationStore\n        };\n      },\n      methods: {\n        notify: function notify(notification) {\n          this.notificationStore.notify(notification);\n        }\n      }\n    });\n    Object.defineProperty(Vue.prototype, '$notify', {\n      get: function get() {\n        return this.$root.notify;\n      }\n    });\n    Object.defineProperty(Vue.prototype, '$notifications', {\n      get: function get() {\n        return this.$root.notificationStore;\n      }\n    });\n    Vue.component('Notifications', Notifications);\n  }\n};\nexport default NotificationsPlugin;",{"version":3,"sources":["C:\\Users\\Vincent\\Desktop\\soa-app-two\\src\\components\\NotificationPlugin\\index.js"],"names":["Notifications","NotificationStore","state","removeNotification","timestamp","indexToDelete","findIndex","n","splice","addNotification","notification","Date","setMilliseconds","getMilliseconds","length","push","notify","Array","isArray","forEach","notificationInstance","NotificationsPlugin","install","Vue","mixin","data","notificationStore","methods","Object","defineProperty","prototype","get","$root","component"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AAEA,IAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AACb;AAEXC,EAAAA,kBAHwB,8BAGJC,SAHI,EAGO;AAC7B,QAAMC,aAAa,GAAG,KAAKH,KAAL,CAAWI,SAAX,CAAqB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACH,SAAF,KAAgBA,SAApB;AAAA,KAAtB,CAAtB;;AACA,QAAIC,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxB,WAAKH,KAAL,CAAWM,MAAX,CAAkBH,aAAlB,EAAiC,CAAjC;AACD;AACF,GARuB;AASxBI,EAAAA,eATwB,2BASPC,YATO,EASO;AAC7BA,IAAAA,YAAY,CAACN,SAAb,GAAyB,IAAIO,IAAJ,EAAzB;AACAD,IAAAA,YAAY,CAACN,SAAb,CAAuBQ,eAAvB,CAAuCF,YAAY,CAACN,SAAb,CAAuBS,eAAvB,KAA2C,KAAKX,KAAL,CAAWY,MAA7F;AACA,SAAKZ,KAAL,CAAWa,IAAX,CAAgBL,YAAhB;AACD,GAbuB;AAcxBM,EAAAA,MAdwB,kBAchBN,YAdgB,EAcF;AAAA;;AACpB,QAAIO,KAAK,CAACC,OAAN,CAAcR,YAAd,CAAJ,EAAiC;AAC/BA,MAAAA,YAAY,CAACS,OAAb,CAAqB,UAACC,oBAAD,EAA0B;AAC7C,QAAA,KAAI,CAACX,eAAL,CAAqBW,oBAArB;AACD,OAFD;AAGD,KAJD,MAIO;AACL,WAAKX,eAAL,CAAqBC,YAArB;AACD;AACF;AAtBuB,CAA1B;AAyBA,IAAIW,mBAAmB,GAAG;AAExBC,EAAAA,OAFwB,mBAEfC,GAFe,EAEV;AACZA,IAAAA,GAAG,CAACC,KAAJ,CAAU;AACRC,MAAAA,IADQ,kBACA;AACN,eAAO;AACLC,UAAAA,iBAAiB,EAAEzB;AADd,SAAP;AAGD,OALO;AAMR0B,MAAAA,OAAO,EAAE;AACPX,QAAAA,MADO,kBACCN,YADD,EACe;AACpB,eAAKgB,iBAAL,CAAuBV,MAAvB,CAA8BN,YAA9B;AACD;AAHM;AAND,KAAV;AAYAkB,IAAAA,MAAM,CAACC,cAAP,CAAsBN,GAAG,CAACO,SAA1B,EAAqC,SAArC,EAAgD;AAC9CC,MAAAA,GAD8C,iBACvC;AACL,eAAO,KAAKC,KAAL,CAAWhB,MAAlB;AACD;AAH6C,KAAhD;AAKAY,IAAAA,MAAM,CAACC,cAAP,CAAsBN,GAAG,CAACO,SAA1B,EAAqC,gBAArC,EAAuD;AACrDC,MAAAA,GADqD,iBAC9C;AACL,eAAO,KAAKC,KAAL,CAAWN,iBAAlB;AACD;AAHoD,KAAvD;AAKAH,IAAAA,GAAG,CAACU,SAAJ,CAAc,eAAd,EAA+BjC,aAA/B;AACD;AA1BuB,CAA1B;AA6BA,eAAeqB,mBAAf","sourcesContent":["import Notifications from './Notifications.vue'\n\nconst NotificationStore = {\n  state: [], // here the notifications will be added\n\n  removeNotification (timestamp) {\n    const indexToDelete = this.state.findIndex(n => n.timestamp === timestamp)\n    if (indexToDelete !== -1) {\n      this.state.splice(indexToDelete, 1)\n    }\n  },\n  addNotification (notification) {\n    notification.timestamp = new Date()\n    notification.timestamp.setMilliseconds(notification.timestamp.getMilliseconds() + this.state.length)\n    this.state.push(notification)\n  },\n  notify (notification) {\n    if (Array.isArray(notification)) {\n      notification.forEach((notificationInstance) => {\n        this.addNotification(notificationInstance)\n      })\n    } else {\n      this.addNotification(notification)\n    }\n  }\n}\n\nvar NotificationsPlugin = {\n\n  install (Vue) {\n    Vue.mixin({\n      data () {\n        return {\n          notificationStore: NotificationStore\n        }\n      },\n      methods: {\n        notify (notification) {\n          this.notificationStore.notify(notification)\n        }\n      }\n    })\n    Object.defineProperty(Vue.prototype, '$notify', {\n      get () {\n        return this.$root.notify\n      }\n    })\n    Object.defineProperty(Vue.prototype, '$notifications', {\n      get () {\n        return this.$root.notificationStore\n      }\n    })\n    Vue.component('Notifications', Notifications)\n  }\n}\n\nexport default NotificationsPlugin\n"]}]}