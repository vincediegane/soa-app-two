{"remainingRequest":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Vincent\\Desktop\\soa-app-two\\src\\components\\Cards\\ChartCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\src\\components\\Cards\\ChartCard.vue","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'chart-card',\n  props: {\n    HeaderText: Boolean,\n    HeaderIcon: Boolean,\n    noFooter: Boolean,\n    chartInsideContent: Boolean,\n    chartInsideHeader: Boolean,\n    chartType: {\n      type: String,\n      default: 'Line' // Line | Pie | Bar\n    },\n    headerAnimation: {\n      type: String,\n      default: 'true'\n    },\n    chartOptions: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    chartResponsiveOptions: {\n      type: Array,\n      default: () => {\n        return []\n      }\n    },\n    chartAnimation: {\n      type: Array,\n      default: () => {\n        return []\n      }\n    },\n    chartData: {\n      type: Object,\n      default: () => {\n        return {\n          labels: [],\n          series: []\n        }\n      }\n    },\n    backgroundColor: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      hoverCount: 0,\n      imgHovered: false,\n      fixedHeader: false,\n      chartId: 'no-id'\n    }\n  },\n  computed: {\n    headerDown() {\n      return this.hoverCount > 15\n    }\n  },\n  methods: {\n    headerBack: function(){\n      this.fixedHeader = false\n    },\n    fixHeader: function() {\n      this.hoverCount = 0;\n      this.fixedHeader = true\n\n      setTimeout(this.headerBack, 480)\n    },\n    onMouseOver: function() {\n      if(this.headerAnimation === 'true') {\n        this.imgHovered = true;\n        this.hoverCount++;\n      }\n    },\n    onMouseLeave: function(){\n      if (this.headerAnimation === 'true') {\n        this.imgHovered = false\n      }\n    },\n\n    getClass: function(backgroundColor) {\n      return 'md-card-header-' + backgroundColor + ''\n    },\n    /***\n     * Initializes the chart by merging the chart options sent via props and the default chart options\n     */\n    initChart () {\n      var chartIdQuery = `#${this.chartId}`\n      this.$Chartist[this.chartType](chartIdQuery, this.chartData, this.chartOptions, this.chartAnimation)\n    },\n    /***\n     * Assigns a random id to the chart\n     */\n    updateChartId () {\n      var currentTime = new Date().getTime().toString()\n      var randomInt = this.getRandomInt(0, currentTime)\n      this.chartId = `div_${randomInt}`\n    },\n    getRandomInt (min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min\n    }\n  },\n  mounted () {\n    this.updateChartId()\n    this.$nextTick(this.initChart)\n  }\n}\n",{"version":3,"sources":["ChartCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"ChartCard.vue","sourceRoot":"src\\components\\Cards","sourcesContent":["<template>\n  <md-card\n    @mouseleave.native=\"onMouseLeave\"\n    :data-count=\"hoverCount\"\n    class=\"md-card-chart\">\n    <md-card-header\n      @mouseenter.native=\"onMouseOver\"\n      :data-header-animation=\"headerAnimation\"\n      :class=\"[\n        {hovered: imgHovered},\n        {hinge: headerDown},\n        {fadeInDown: fixedHeader},\n        {animated: true},\n        {[getClass(backgroundColor)]: true},\n        {'md-card-header-text': HeaderText},\n        {'md-card-header-icon': HeaderIcon}]\">\n      <div v-if=\"chartInsideHeader\" :id=\"chartId\" class=\"ct-chart\"></div>\n      <slot name=\"chartInsideHeader\"></slot>\n    </md-card-header>\n\n    <md-card-content>\n      <div v-if=\"chartInsideContent\" :id=\"chartId\" class=\"ct-chart\"></div>\n      <div class=\"md-card-action-buttons text-center\" v-if=\"headerAnimation === 'true'\">\n        <md-button class=\"md-danger md-simple fix-broken-card\" @click=\"fixHeader\" v-if=\"headerDown\">\n          <slot name=\"fixed-button\"></slot> Fix Header!\n        </md-button>\n        <slot name=\"first-button\"></slot>\n        <slot name=\"second-button\"></slot>\n        <slot name=\"third-button\"></slot>\n      </div>\n      <slot name=\"content\"></slot>\n    </md-card-content>\n\n    <md-card-actions md-alignment=\"left\" v-if=\"!noFooter\">\n      <slot name=\"footer\"></slot>\n    </md-card-actions>\n  </md-card>\n</template>\n<script>\nexport default {\n  name: 'chart-card',\n  props: {\n    HeaderText: Boolean,\n    HeaderIcon: Boolean,\n    noFooter: Boolean,\n    chartInsideContent: Boolean,\n    chartInsideHeader: Boolean,\n    chartType: {\n      type: String,\n      default: 'Line' // Line | Pie | Bar\n    },\n    headerAnimation: {\n      type: String,\n      default: 'true'\n    },\n    chartOptions: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    chartResponsiveOptions: {\n      type: Array,\n      default: () => {\n        return []\n      }\n    },\n    chartAnimation: {\n      type: Array,\n      default: () => {\n        return []\n      }\n    },\n    chartData: {\n      type: Object,\n      default: () => {\n        return {\n          labels: [],\n          series: []\n        }\n      }\n    },\n    backgroundColor: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      hoverCount: 0,\n      imgHovered: false,\n      fixedHeader: false,\n      chartId: 'no-id'\n    }\n  },\n  computed: {\n    headerDown() {\n      return this.hoverCount > 15\n    }\n  },\n  methods: {\n    headerBack: function(){\n      this.fixedHeader = false\n    },\n    fixHeader: function() {\n      this.hoverCount = 0;\n      this.fixedHeader = true\n\n      setTimeout(this.headerBack, 480)\n    },\n    onMouseOver: function() {\n      if(this.headerAnimation === 'true') {\n        this.imgHovered = true;\n        this.hoverCount++;\n      }\n    },\n    onMouseLeave: function(){\n      if (this.headerAnimation === 'true') {\n        this.imgHovered = false\n      }\n    },\n\n    getClass: function(backgroundColor) {\n      return 'md-card-header-' + backgroundColor + ''\n    },\n    /***\n     * Initializes the chart by merging the chart options sent via props and the default chart options\n     */\n    initChart () {\n      var chartIdQuery = `#${this.chartId}`\n      this.$Chartist[this.chartType](chartIdQuery, this.chartData, this.chartOptions, this.chartAnimation)\n    },\n    /***\n     * Assigns a random id to the chart\n     */\n    updateChartId () {\n      var currentTime = new Date().getTime().toString()\n      var randomInt = this.getRandomInt(0, currentTime)\n      this.chartId = `div_${randomInt}`\n    },\n    getRandomInt (min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min\n    }\n  },\n  mounted () {\n    this.updateChartId()\n    this.$nextTick(this.initChart)\n  }\n}\n</script>\n"]}]}