{"remainingRequest":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\pages\\Dashboard\\Forms\\ValidationForms\\RegisterForm.vue?vue&type=template&id=d807d602&scoped=true&","dependencies":[{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\pages\\Dashboard\\Forms\\ValidationForms\\RegisterForm.vue","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"form\",\n    [\n      _c(\n        \"md-card\",\n        [\n          _c(\n            \"md-card-header\",\n            { staticClass: \"md-card-header-icon md-card-header-green\" },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"card-icon\" },\n                [_c(\"md-icon\", [_vm._v(\"mail_outline\")])],\n                1\n              ),\n              _c(\"h4\", { staticClass: \"title\" }, [_vm._v(\"Register Form\")])\n            ]\n          ),\n          _c(\n            \"md-card-content\",\n            [\n              _c(\n                \"md-field\",\n                {\n                  class: [\n                    {\n                      \"md-valid\": !_vm.errors.has(\"email\") && _vm.touched.email\n                    },\n                    { \"md-error\": _vm.errors.has(\"email\") }\n                  ]\n                },\n                [\n                  _c(\"label\", [_vm._v(\"Email Adress\")]),\n                  _c(\"md-input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: _vm.modelValidations.email,\n                        expression: \"modelValidations.email\"\n                      }\n                    ],\n                    attrs: {\n                      \"data-vv-name\": \"email\",\n                      type: \"email\",\n                      name: \"email\",\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.email,\n                      callback: function($$v) {\n                        _vm.email = $$v\n                      },\n                      expression: \"email\"\n                    }\n                  }),\n                  _c(\n                    \"slide-y-down-transition\",\n                    [\n                      _c(\n                        \"md-icon\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value:\n                                _vm.errors.has(\"email\") && _vm.touched.email,\n                              expression: \"errors.has('email') && touched.email\"\n                            }\n                          ],\n                          staticClass: \"error\"\n                        },\n                        [_vm._v(\"close\")]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"slide-y-down-transition\",\n                    [\n                      _c(\n                        \"md-icon\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value:\n                                !_vm.errors.has(\"email\") && _vm.touched.email,\n                              expression:\n                                \"!errors.has('email') && touched.email\"\n                            }\n                          ],\n                          staticClass: \"success\"\n                        },\n                        [_vm._v(\"done\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"md-field\",\n                {\n                  class: [\n                    {\n                      \"md-valid\":\n                        !_vm.errors.has(\"password\") && _vm.touched.password\n                    },\n                    { \"md-error\": _vm.errors.has(\"password\") }\n                  ]\n                },\n                [\n                  _c(\"label\", [_vm._v(\"Password\")]),\n                  _c(\"md-input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: _vm.modelValidations.password,\n                        expression: \"modelValidations.password\"\n                      }\n                    ],\n                    attrs: {\n                      \"data-vv-name\": \"password\",\n                      type: \"password\",\n                      name: \"password\",\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.password,\n                      callback: function($$v) {\n                        _vm.password = $$v\n                      },\n                      expression: \"password\"\n                    }\n                  }),\n                  _c(\n                    \"slide-y-down-transition\",\n                    [\n                      _c(\n                        \"md-icon\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value:\n                                _vm.errors.has(\"password\") &&\n                                _vm.touched.password,\n                              expression:\n                                \"errors.has('password') && touched.password\"\n                            }\n                          ],\n                          staticClass: \"error\"\n                        },\n                        [_vm._v(\"close\")]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"slide-y-down-transition\",\n                    [\n                      _c(\n                        \"md-icon\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value:\n                                !_vm.errors.has(\"password\") &&\n                                _vm.touched.password,\n                              expression:\n                                \"!errors.has('password') && touched.password\"\n                            }\n                          ],\n                          staticClass: \"success\"\n                        },\n                        [_vm._v(\"done\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"md-field\",\n                {\n                  class: [\n                    {\n                      \"md-valid\":\n                        !_vm.errors.has(\"confirmPassword\") &&\n                        _vm.touched.confirmPass\n                    },\n                    { \"md-error\": _vm.errors.has(\"confirmPassword\") }\n                  ]\n                },\n                [\n                  _c(\"label\", [_vm._v(\"Confirm Password\")]),\n                  _c(\"md-input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: _vm.modelValidations.confirmPassword,\n                        expression: \"modelValidations.confirmPassword\"\n                      }\n                    ],\n                    attrs: {\n                      \"data-vv-name\": \"confirmPassword\",\n                      type: \"password\",\n                      name: \"confirmPassword\",\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.confirmPassword,\n                      callback: function($$v) {\n                        _vm.confirmPassword = $$v\n                      },\n                      expression: \"confirmPassword\"\n                    }\n                  }),\n                  _c(\n                    \"slide-y-down-transition\",\n                    [\n                      _c(\n                        \"md-icon\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value:\n                                _vm.errors.has(\"confirmPassword\") &&\n                                _vm.touched.confirmPassword,\n                              expression:\n                                \"errors.has('confirmPassword') && touched.confirmPassword\"\n                            }\n                          ],\n                          staticClass: \"error\"\n                        },\n                        [_vm._v(\"close\")]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"slide-y-down-transition\",\n                    [\n                      _c(\n                        \"md-icon\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value:\n                                !_vm.errors.has(\"confirmPassword\") &&\n                                _vm.touched.confirmPassword,\n                              expression:\n                                \"!errors.has('confirmPassword') && touched.confirmPassword\"\n                            }\n                          ],\n                          staticClass: \"success\"\n                        },\n                        [_vm._v(\"done\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\"div\", { staticClass: \"form-category\" }, [\n                _vm._v(\"* Required fields\")\n              ])\n            ],\n            1\n          ),\n          _c(\n            \"md-card-actions\",\n            { attrs: { \"md-alignment\": \"space-between\" } },\n            [\n              _c(\n                \"md-checkbox\",\n                {\n                  model: {\n                    value: _vm.boolean,\n                    callback: function($$v) {\n                      _vm.boolean = $$v\n                    },\n                    expression: \"boolean\"\n                  }\n                },\n                [_vm._v(\"Subscribe to newsletter\")]\n              ),\n              _c(\n                \"md-button\",\n                {\n                  staticClass: \"md-success\",\n                  attrs: { \"native-type\": \"submit\" },\n                  nativeOn: {\n                    click: function($event) {\n                      $event.preventDefault()\n                      return _vm.validate($event)\n                    }\n                  }\n                },\n                [_vm._v(\"Register\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}