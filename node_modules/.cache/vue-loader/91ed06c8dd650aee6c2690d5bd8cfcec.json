{"remainingRequest":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\pages\\Dashboard\\Forms\\Wizard\\FirstStep.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\pages\\Dashboard\\Forms\\Wizard\\FirstStep.vue","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { SlideYDownTransition } from 'vue2-transitions'\n  export default {\n    components: {\n      SlideYDownTransition\n    },\n    props: {\n      avatar: {\n        type: String,\n        default: './img/default-avatar.png'\n      }\n    },\n    data() {\n      return {\n        image: '',\n        single: null,\n        firstName: '',\n        lastName: '',\n        email: '',\n        touched: {\n          firstName: false,\n          lastName: false\n        },\n        modelValidations: {\n          firstName: {\n            required: true,\n            min: 5\n          },\n          lastName: {\n            required: true,\n            min: 5\n          },\n          email: {\n            required: true,\n            email: true\n          }\n        }\n      }\n    },\n    methods: {\n      handlePreview(file) {\n        this.model.imageUrl = URL.createObjectURL(file.raw);\n      },\n      getError(fieldName) {\n        return this.errors.first(fieldName)\n      },\n      validate() {\n        return this.$validator.validateAll().then(res => {\n          this.$emit('on-validated', res)\n          return res\n        })\n      },\n      onFileChange(e) {\n        var files = e.target.files || e.dataTransfer.files;\n        if (!files.length)\n        return;\n        this.createImage(files[0]);\n      },\n      createImage(file) {\n        var reader = new FileReader();\n        var vm = this;\n\n        reader.onload = (e) => {\n          vm.image = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    watch: {\n      firstName () {\n        this.touched.firstName = true\n      },\n      lastName () {\n        this.touched.lastName = true\n      },\n      email () {\n        this.touched.email = true\n      }\n    }\n  }\n",{"version":3,"sources":["FirstStep.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FirstStep.vue","sourceRoot":"src\\pages\\Dashboard\\Forms\\Wizard","sourcesContent":["<template>\n  <div>\n    <h5 class=\"info-text\"> Let's start with the basic information (with validation)</h5>\n    <div class=\"md-layout\">\n      <div class=\"md-layout-item md-size-40 md-small-size-100\">\n        <div class=\"picture-container\">\n          <div class=\"picture\">\n            <div v-if=\"!image\">\n              <img :src=\"avatar\" class=\"picture-src\" title=\"\">\n            </div>\n            <div v-else>\n              <img :src=\"image\" />\n            </div>\n            <input type=\"file\" @change=\"onFileChange\">\n          </div>\n          <h6 class=\"description\">Choose Picture</h6>\n        </div>\n      </div>\n      <div class=\"md-layout-item md-size-60 mt-4 md-small-size-100\">\n        <md-field :class=\"[\n          {'md-valid': !errors.has('firstName') && touched.firstName},\n          {'md-form-group': true},\n          {'md-error': errors.has('firstName')}]\">\n          <md-icon>face</md-icon>\n          <label>First Name</label>\n          <md-input\n            v-model=\"firstName\"\n            data-vv-name=\"firstName\"\n            type=\"text\"\n            name=\"firstName\"\n            required\n            v-validate=\"modelValidations.firstName\">\n          </md-input>\n          <slide-y-down-transition>\n            <md-icon class=\"error\" v-show=\"errors.has('firstName')\">close</md-icon>\n          </slide-y-down-transition>\n          <slide-y-down-transition>\n            <md-icon class=\"success\" v-show=\"!errors.has('firstName') && touched.firstName\">done</md-icon>\n          </slide-y-down-transition>\n        </md-field>\n\n        <md-field :class=\"[\n          {'md-valid': !errors.has('lastName') && touched.lastName},\n          {'md-form-group': true},\n          {'md-error': errors.has('lastName')}]\">\n          <md-icon>record_voice_over</md-icon>\n          <label>Last Name</label>\n          <md-input\n            v-model=\"lastName\"\n            data-vv-name=\"lastName\"\n            type=\"text\"\n            name=\"lastName\"\n            required\n            v-validate=\"modelValidations.lastName\">\n          </md-input>\n          <slide-y-down-transition>\n            <md-icon class=\"error\" v-show=\"errors.has('lastName')\">close</md-icon>\n          </slide-y-down-transition>\n          <slide-y-down-transition>\n            <md-icon class=\"success\" v-show=\"!errors.has('lastName') && touched.lastName\">done</md-icon>\n          </slide-y-down-transition>\n        </md-field>\n      </div>\n\n      <div class=\"md-layout-item md-size-95 ml-auto mt-4 md-small-size-100\">\n        <md-field :class=\"[\n          {'md-valid': !errors.has('email') && touched.email},\n          {'md-form-group': true},\n          {'md-error': errors.has('email')}]\">\n          <md-icon>email</md-icon>\n          <label>Email</label>\n          <md-input\n            v-model=\"email\"\n            data-vv-name=\"email\"\n            type=\"text\"\n            name=\"email\"\n            required\n            v-validate=\"modelValidations.email\">\n          </md-input>\n          <slide-y-down-transition>\n            <md-icon class=\"error\" v-show=\"errors.has('email')\">close</md-icon>\n          </slide-y-down-transition>\n          <slide-y-down-transition>\n            <md-icon class=\"success\" v-show=\"!errors.has('email') && touched.email\">done</md-icon>\n          </slide-y-down-transition>\n        </md-field>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { SlideYDownTransition } from 'vue2-transitions'\n  export default {\n    components: {\n      SlideYDownTransition\n    },\n    props: {\n      avatar: {\n        type: String,\n        default: './img/default-avatar.png'\n      }\n    },\n    data() {\n      return {\n        image: '',\n        single: null,\n        firstName: '',\n        lastName: '',\n        email: '',\n        touched: {\n          firstName: false,\n          lastName: false\n        },\n        modelValidations: {\n          firstName: {\n            required: true,\n            min: 5\n          },\n          lastName: {\n            required: true,\n            min: 5\n          },\n          email: {\n            required: true,\n            email: true\n          }\n        }\n      }\n    },\n    methods: {\n      handlePreview(file) {\n        this.model.imageUrl = URL.createObjectURL(file.raw);\n      },\n      getError(fieldName) {\n        return this.errors.first(fieldName)\n      },\n      validate() {\n        return this.$validator.validateAll().then(res => {\n          this.$emit('on-validated', res)\n          return res\n        })\n      },\n      onFileChange(e) {\n        var files = e.target.files || e.dataTransfer.files;\n        if (!files.length)\n        return;\n        this.createImage(files[0]);\n      },\n      createImage(file) {\n        var reader = new FileReader();\n        var vm = this;\n\n        reader.onload = (e) => {\n          vm.image = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    watch: {\n      firstName () {\n        this.touched.firstName = true\n      },\n      lastName () {\n        this.touched.lastName = true\n      },\n      email () {\n        this.touched.email = true\n      }\n    }\n  }\n</script>\n<style>\n</style>\n"]}]}