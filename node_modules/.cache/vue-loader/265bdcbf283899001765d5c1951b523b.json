{"remainingRequest":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\pages\\Dashboard\\Forms\\ValidationForms\\TypeValidationForm.vue?vue&type=style&index=0&id=618841af&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\pages\\Dashboard\\Forms\\ValidationForms\\TypeValidationForm.vue","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\sass-loader\\lib\\loader.js","mtime":1542636820899},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.md-card .md-card-actions{\n  border: none;\n}\n\n.text-center{\n  justify-content: center !important;\n}\n",{"version":3,"sources":["TypeValidationForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsQA;AACA;AACA;;AAEA;AACA;AACA","file":"TypeValidationForm.vue","sourceRoot":"src\\pages\\Dashboard\\Forms\\ValidationForms","sourcesContent":["<template>\n  <form>\n    <md-card>\n      <md-card-header class=\"md-card-header-text md-card-header-green\">\n        <div class=\"card-text\">\n          <h4 class=\"title\">Type Validation</h4>\n        </div>\n      </md-card-header>\n\n      <md-card-content>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Required Text\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field :class=\"[\n              {'md-error': errors.has('required')},\n              {'md-valid': !errors.has('required') && touched.required}]\">\n              <md-input\n                v-model=\"required\"\n                data-vv-name=\"required\"\n                type=\"text\"\n                name=\"required\"\n                v-validate= \"modelValidations.required\"\n                required>\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"error\" v-show=\"errors.has('required')\">close</md-icon>\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon class=\"success\" v-show=\"!errors.has('required') && touched.required\">done</md-icon>\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>required</code>\n          </label>\n        </div>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Email\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field :class=\"[\n              {'md-error': errors.has('email')},\n              {'md-valid': !errors.has('email') && touched.email}]\">\n              <md-input\n                v-model=\"email\"\n                data-vv-name=\"email\"\n                type=\"text\"\n                name=\"email\"\n                v-validate= \"modelValidations.email\"\n                required>\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"error\" v-show=\"errors.has('email')\">close</md-icon>\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon class=\"success\" v-show=\"!errors.has('email') && touched.email\">done</md-icon>\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>email=\"true\"</code>\n          </label>\n        </div>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Number\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field :class=\"[\n              {'md-error': errors.has('number')},\n              {'md-valid': !errors.has('number') && touched.number}]\">\n              <md-input\n                v-model=\"number\"\n                data-vv-name=\"number\"\n                type=\"number\"\n                name=\"number\"\n                v-validate= \"modelValidations.number\"\n                required>\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"error\" v-show=\"errors.has('number')\">close</md-icon>\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon class=\"success\" v-show=\"!errors.has('number') && touched.number\">done</md-icon>\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>number=\"true\"</code>\n          </label>\n        </div>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Url\n          </label>\n          <div class=\"md-layout-item\">\n            <md-field :class=\"[\n              {'md-error': errors.has('url')},\n              {'md-valid': !errors.has('url') && touched.url}]\">\n              <md-input\n                v-model=\"url\"\n                data-vv-name=\"url\"\n                type=\"url\"\n                name=\"url\"\n                v-validate=\"modelValidations.url\"\n                required>\n              </md-input>\n              <slide-y-down-transition>\n                <md-icon class=\"errror\" v-show=\"errors.has('url')\">close</md-icon>\n              </slide-y-down-transition>\n              <slide-y-down-transition>\n                <md-icon class=\"success\" v-show=\"!errors.has('url') && touched.url\">done</md-icon>\n              </slide-y-down-transition>\n            </md-field>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>url=\"true\"</code>\n          </label>\n        </div>\n        <div class=\"md-layout\">\n          <label class=\"md-layout-item md-size-20 md-form-label\">\n            Equal to\n          </label>\n          <div class=\"md-layout-item\">\n            <div class=\"md-layout\">\n              <div class=\"md-layout-item\">\n                <md-field :class=\"[\n                  {'md-error': errors.has('equalToSource')},\n                  {'md-valid': !errors.has('equalToSource') && touched.equalToSource}]\">\n                  <label>#idSource</label>\n                  <md-input\n                    v-model=\"equalToSource\"\n                    data-vv-name=\"equalToSource\"\n                    type=\"text\"\n                    name=\"equalToSource\"\n                    v-validate=\"modelValidations.equalToSource\"\n                    required>\n                  </md-input>\n                  <slide-y-down-transition>\n                    <md-icon class=\"error\" v-show=\"errors.has('equalToSource')\">close</md-icon>\n                  </slide-y-down-transition>\n                  <slide-y-down-transition>\n                    <md-icon class=\"success\" v-show=\"!errors.has('equalToSource') && touched.equalToSource\">done</md-icon>\n                  </slide-y-down-transition>\n                </md-field>\n              </div>\n              <div class=\"md-layout-item\">\n                <md-field :class=\"[\n                  {'md-error': errors.has('equalToDest')},\n                  {'md-valid': !errors.has('equalToDest') && touched.equalToDest}]\">\n                  <label>#idDestination</label>\n                  <md-input\n                    v-model=\"equalToDest\"\n                    data-vv-name=\"equalToDest\"\n                    type=\"text\"\n                    name=\"equalToDest\"\n                    v-validate=\"modelValidations.equalToDest\"\n                    required>\n                  </md-input>\n                  <slide-y-down-transition>\n                    <md-icon class=\"error\" v-show=\"errors.has('equalToDest')\">close</md-icon>\n                  </slide-y-down-transition>\n                  <slide-y-down-transition>\n                    <md-icon class=\"success\" v-show=\"!errors.has('equalToDest') && touched.equalToDest\">done</md-icon>\n                  </slide-y-down-transition>\n                </md-field>\n              </div>\n            </div>\n          </div>\n          <label class=\"md-layout-item md-size-20 md-label-on-right\">\n            <code>equalTo=\"#idSource\"</code>\n          </label>\n        </div>\n      </md-card-content>\n\n      <md-card-actions class=\"text-center\">\n        <md-button native-type=\"submit\" @click.native.prevent=\"validate\" class=\"md-success\">Validate Inputs</md-button>\n      </md-card-actions>\n    </md-card>\n  </form>\n</template>\n<script>\nimport { SlideYDownTransition } from 'vue2-transitions'\nexport default {\n  components: {\n    SlideYDownTransition\n  },\n  data() {\n    return {\n      equalToSource: '',\n      equalToDest: '',\n      required: '',\n      email: '',\n      number: '',\n      url: '',\n      touched: {\n        required: false,\n        email: false,\n        number: false,\n        url: false,\n        equalToSource: false,\n        equalToDest: false\n      },\n      modelValidations: {\n        required: {\n          required: true,\n        },\n        email: {\n          required: true,\n          email: true\n        },\n        number: {\n          required: true,\n          numeric: true\n        },\n        url:{\n          required: true,\n          url: true\n        },\n        equalToSource: {\n          required: true\n        },\n        equalToDest:{\n          required: true,\n          confirmed: 'equalToSource'\n        }\n      }\n    }\n  },\n  methods: {\n    validate() {\n      this.$validator.validateAll().then(isValid => {\n        this.$emit('on-submit', this.registerForm, isValid)\n      })\n    }\n  },\n  watch: {\n    required(){\n      this.touched.required = true\n    },\n    email(){\n      this.touched.email = true\n    },\n    number(){\n      this.touched.number = true\n    },\n    url(){\n      this.touched.url = true\n    },\n    equalToSource(){\n      this.touched.equalToSource = true\n    },\n    equalToDest(){\n      this.touched.equalToDest = true\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n.md-card .md-card-actions{\n  border: none;\n}\n\n.text-center{\n  justify-content: center !important;\n}\n</style>\n"]}]}