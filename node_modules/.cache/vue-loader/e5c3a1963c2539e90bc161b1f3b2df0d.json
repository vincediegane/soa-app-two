{"remainingRequest":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\components\\WorldMap\\AsyncWorldMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\components\\WorldMap\\AsyncWorldMap.vue","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n\n/*  We lazy load (async) the VectorMaps component because it contains 2 big libraries (jquery and jquery vector maps)\n    If the component is not loaded within 200ms, we display a loading component in the meanwhile.\n    This way, we don't bloat the main bundle with 2 unnecessary libs that we only need for this page :)\n */\n\nconst WorldMap = () => ({\n  component: import('./WorldMap.vue'),\n\n  delay: 200\n});\nexport default {\n  components: {\n    WorldMap\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  }\n}\n",{"version":3,"sources":["AsyncWorldMap.vue"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AsyncWorldMap.vue","sourceRoot":"src\\components\\WorldMap","sourcesContent":["<template>\n  <world-map :data=\"data\"></world-map>\n</template>\n<script>\n  /*  We lazy load (async) the VectorMaps component because it contains 2 big libraries (jquery and jquery vector maps)\n      If the component is not loaded within 200ms, we display a loading component in the meanwhile.\n      This way, we don't bloat the main bundle with 2 unnecessary libs that we only need for this page :)\n   */\n\n  const WorldMap = () => ({\n    component: import('./WorldMap.vue'),\n\n    delay: 200\n  });\n  export default {\n    components: {\n      WorldMap\n    },\n    props: {\n      data: {\n        type: Object,\n        default: () => {\n          return {}\n        }\n      }\n    }\n  }\n</script>\n<style>\n</style>\n"]}]}