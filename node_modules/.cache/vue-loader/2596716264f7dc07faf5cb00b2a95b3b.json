{"remainingRequest":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\components\\Collapse.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\src\\components\\Collapse.vue","mtime":1531217190000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Vincent\\Desktop\\PROJECTS\\VueJs\\soa-app-two\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { CollapseTransition } from 'vue2-transitions'\n\nexport default {\n  name: 'collapse',\n  components: {\n    CollapseTransition\n  },\n  props: {\n    collapse: Array,\n    icon: String,\n    colorCollapse: String\n  },\n  data(){\n    return {\n      isActive: 1\n    }\n  },\n  methods: {\n    getActiveCollapse(index){\n      return this.isActive == index\n    },\n    activeCollapse (index){\n      return {\n        'is-active': this.isActive == index\n      }\n    },\n    toggle (index) {\n      if(index == this.isActive) {\n        this.isActive = 0;\n      } else {\n        this.isActive = index;\n      }\n    },\n    getCollapseContent: function(index){\n      return 'md-collapse-pane-'+ index +''\n    },\n    getColorCollapse: function(colorCollapse){\n      return 'md-'+ colorCollapse +''\n    }\n  }\n}\n",{"version":3,"sources":["Collapse.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Collapse.vue","sourceRoot":"src\\components","sourcesContent":["<template>\n  <div>\n    <div :class=\"[\n      'md-collapse',\n      activeCollapse(index + 1),\n      {[getColorCollapse(colorCollapse)]: true}]\"\n      v-for=\"(item, index) in collapse\" :key=\"item\">\n      <div class=\"md-collapse-label\" @click=\"toggle(index + 1)\">\n        <h5 class=\"md-collapse-title\">\n            {{item}}\n            <md-icon>{{icon}}</md-icon>\n        </h5>\n      </div>\n\n      <collapse-transition>\n      <div class=\"md-collapse-content\" v-show=\"getActiveCollapse(index + 1)\">\n        <slot :name=\"getCollapseContent(index + 1)\"></slot>\n      </div>\n      </collapse-transition>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { CollapseTransition } from 'vue2-transitions'\n\nexport default {\n  name: 'collapse',\n  components: {\n    CollapseTransition\n  },\n  props: {\n    collapse: Array,\n    icon: String,\n    colorCollapse: String\n  },\n  data(){\n    return {\n      isActive: 1\n    }\n  },\n  methods: {\n    getActiveCollapse(index){\n      return this.isActive == index\n    },\n    activeCollapse (index){\n      return {\n        'is-active': this.isActive == index\n      }\n    },\n    toggle (index) {\n      if(index == this.isActive) {\n        this.isActive = 0;\n      } else {\n        this.isActive = index;\n      }\n    },\n    getCollapseContent: function(index){\n      return 'md-collapse-pane-'+ index +''\n    },\n    getColorCollapse: function(colorCollapse){\n      return 'md-'+ colorCollapse +''\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.text-center{\n  display: flex;\n}\n</style>\n"]}]}